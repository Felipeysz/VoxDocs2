// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VoxDocs.Data;

#nullable disable

namespace VoxDocs.Migrations
{
    [DbContext(typeof(VoxDocsContext))]
    partial class VoxDocsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VoxDocs.Models.ArmazenamentoUsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LimiteArmazenamento")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UsoArmazenamento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserStorage");
                });

            modelBuilder.Entity("VoxDocs.Models.ConfiguracaoDocumentosModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiasArmazenamentoTemporario")
                        .HasColumnType("int");

                    b.Property<bool>("PermitirExcel")
                        .HasColumnType("bit");

                    b.Property<bool>("PermitirImagens")
                        .HasColumnType("bit");

                    b.Property<bool>("PermitirPDF")
                        .HasColumnType("bit");

                    b.Property<bool>("PermitirWord")
                        .HasColumnType("bit");

                    b.Property<int>("TamanhoMaximoMB")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ConfiguracaoDocumentos");
                });

            modelBuilder.Entity("VoxDocs.Models.DocumentoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ContadorAcessos")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descrição")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelSeguranca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePastaPrincipal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeSubPasta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SubPastaModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("TamanhoArquivo")
                        .HasColumnType("bigint");

                    b.Property<string>("TokenSeguranca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlArquivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCriador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioUltimaAlteracao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubPastaModelId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("VoxDocs.Models.EmpresasContratanteModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataContratacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaContratante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanoContratado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmpresasContratantes");
                });

            modelBuilder.Entity("VoxDocs.Models.LogAtividadeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detalhes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DocumentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoAcao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("usuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LogsAtividades");
                });

            modelBuilder.Entity("VoxDocs.Models.PagamentoConcluido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailContato")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpresaContratante")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MetodoPagamento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NomePlano")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PeriodicidadePlano")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StatusEmpresa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ValorPlano")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PagamentosConcluidos");
                });

            modelBuilder.Entity("VoxDocs.Models.PastaPrincipalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmpresaContratante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePastaPrincipal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PastaPrincipal");
                });

            modelBuilder.Entity("VoxDocs.Models.PlanosVoxDocsModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ArmazenamentoDisponivel")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descriçao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duracao")
                        .HasColumnType("int");

                    b.Property<int?>("LimiteAdmin")
                        .HasColumnType("int");

                    b.Property<int?>("LimiteUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Periodicidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PlanosVoxDocs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9b2f7e0-d938-4b4d-b256-38bbd6a9d4ef"),
                            ArmazenamentoDisponivel = 10,
                            Ativo = false,
                            Descriçao = "Plano com funcionalidades básicas",
                            Duracao = 0,
                            LimiteAdmin = 2,
                            LimiteUsuario = 5,
                            Nome = "Gratuito",
                            Periodicidade = "Ilimitado",
                            Preco = 0m
                        },
                        new
                        {
                            Id = new Guid("b40c1b56-6cc2-4988-b979-3b00c1dd8e1e"),
                            ArmazenamentoDisponivel = 200,
                            Ativo = false,
                            Descriçao = "Plano completo com funcionalidades avançadas",
                            Duracao = 1,
                            LimiteAdmin = -1,
                            LimiteUsuario = -1,
                            Nome = "Premium",
                            Periodicidade = "Mensal",
                            Preco = 29.99m
                        },
                        new
                        {
                            Id = new Guid("7d7f02e7-44b5-4692-88a4-8c2b149b5059"),
                            ArmazenamentoDisponivel = 200,
                            Ativo = false,
                            Descriçao = "Plano completo com desconto de 10% para 6 meses",
                            Duracao = 6,
                            LimiteAdmin = -1,
                            LimiteUsuario = -1,
                            Nome = "Premium",
                            Periodicidade = "Semestral",
                            Preco = 161.95m
                        },
                        new
                        {
                            Id = new Guid("0e8c6b83-49c1-403e-b70c-6fc8e0f09c7f"),
                            ArmazenamentoDisponivel = 200,
                            Ativo = false,
                            Descriçao = "Plano completo com desconto de 20% para 12 meses",
                            Duracao = 12,
                            LimiteAdmin = -1,
                            LimiteUsuario = -1,
                            Nome = "Premium",
                            Periodicidade = "Anual",
                            Preco = 287.90m
                        });
                });

            modelBuilder.Entity("VoxDocs.Models.SubPastaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmpresaContratante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePastaPrincipal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeSubPasta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PastaPrincipalModelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PastaPrincipalModelId");

                    b.ToTable("SubPastas");
                });

            modelBuilder.Entity("VoxDocs.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaContratante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LimiteAdmin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LimiteUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordResetTokenExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("PermissionAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanoPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VoxDocs.Models.DocumentoModel", b =>
                {
                    b.HasOne("VoxDocs.Models.SubPastaModel", null)
                        .WithMany("Documentos")
                        .HasForeignKey("SubPastaModelId");
                });

            modelBuilder.Entity("VoxDocs.Models.SubPastaModel", b =>
                {
                    b.HasOne("VoxDocs.Models.PastaPrincipalModel", null)
                        .WithMany("SubPastas")
                        .HasForeignKey("PastaPrincipalModelId");
                });

            modelBuilder.Entity("VoxDocs.Models.PastaPrincipalModel", b =>
                {
                    b.Navigation("SubPastas");
                });

            modelBuilder.Entity("VoxDocs.Models.SubPastaModel", b =>
                {
                    b.Navigation("Documentos");
                });
#pragma warning restore 612, 618
        }
    }
}
