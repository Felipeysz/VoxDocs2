@model VoxDocs.DTO.DTOCadastroEmpresa

@{
    int limiteUsuarios = ViewBag.LimiteUsuarios ?? 0;
    int userCount = Model.Usuarios?.Count(u => u.PermissionAccount == "User") ?? 0;
    int disponiveis = limiteUsuarios;
}

<head>
  <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet"/>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>

<style>
  /* -------------------------------------------
   Estilos para Step 4 - Usuários Comuns
   ------------------------------------------- */

  /*Coloração do botão*/
  .btn{
    background-color: #5c3c8a;
    color: #fff;
    border: none;
  }

  .btn:hover{
    background-color: #5c3c8a;
    color: #fff;
    transform: translateY(-2px);
  }

  /* Título “Usuários Comuns” */
  .step-content[data-step="4"] h4 {
    font-family: 'Poppins', sans-serif;
    font-size: 1.4rem;
    font-weight: 600;
    color: var(--clr-primary);
    margin-bottom: 1rem;
  }

  /* Container que comporta cada usuário listado */
  #usersContainer {
    margin-bottom: 1rem;
  }

  /* Exemplo genérico de item de usuário (renderizado via JS/Razor) */
  #usersContainer .user-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    border: 1px solid #dee2e6;
    border-radius: 0.75rem;
    background-color: var(--clr-card);
    box-shadow: 0 2px 8px var(--shadow-light);
    padding: 0.75rem 1rem;
    margin-bottom: 0.75rem;
  }

  /* Dentro do “.user-item”, agrupa informações do usuário (ex: nome, email) */
  #usersContainer .user-item .user-info {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-family: 'Poppins', sans-serif;
    font-size: 1rem;
    color: #333;
  }

  /* Botão “Remover Usuário” (caso exista dentro de cada .user-item) */
  #usersContainer .user-item .btn-remover-user {
    font-size: 0.9rem;
    padding: 0.4rem 0.7rem;
    border-radius: 0.375rem;
    background-color: transparent;
    color: var(--clr-danger, #dc3545);
    border: 1.5px solid var(--clr-danger, #dc3545);
    display: flex;
    align-items: center;
    justify-content: center;
    transition:
      background-color 0.25s ease,
      border-color 0.25s ease,
      color 0.25s ease,
      transform 0.2s ease;
  }

  #usersContainer .user-item .btn-remover-user:hover,
  #usersContainer .user-item .btn-remover-user:focus {
    background-color: var(--clr-danger, #dc3545);
    border-color: var(--clr-danger, #dc3545);
    color: #fff;
    transform: translateY(-2px);
    outline: none;
  }

  #usersContainer .user-item .btn-remover-user:active {
    transform: translateY(0);
    opacity: 0.9;
  }

  /* Botão “Adicionar Usuário” */
  #btnAdicionarUser {
    font-family: 'Poppins', sans-serif;
    font-size: 0.95rem;
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    border: 1.5px solid var(--clr-primary);
    color: var(--clr-primary);
    background-color: transparent;
    display: inline-flex;
    align-items: center;
    gap: 0.25rem;
    cursor: pointer;
    transition:
      background-color 0.25s ease,
      border-color 0.25s ease,
      color 0.25s ease,
      transform 0.2s ease;
  }

  #btnAdicionarUser:hover,
  #btnAdicionarUser:focus {
    background-color: var(--clr-accent);
    border-color: var(--clr-accent);
    color: #fff;
    transform: translateY(-2px);
    outline: none;
  }

  #btnAdicionarUser:active {
    transform: translateY(0);
    opacity: 0.9;
  }

  /* Alert de informação sobre limites do plano */
  .step-content[data-step="4"] .alert-info {
    background-color: var(--clr-card);
    border-color: var(--clr-accent);
    color: var(--clr-primary);
    font-family: 'Poppins', sans-serif;
    font-size: 0.95rem;
    border-left: 4px solid var(--clr-accent);
  }
  .step-content[data-step="4"] .badge {
    font-family: 'Poppins', sans-serif;
    font-size: 0.9rem;
    padding: 0.35rem 0.75rem;
    border-radius: 0.75rem;
    background-color: #5c3c8a;
    color: #fff;
  }
</style>

<div class="step-content" data-step="4">
  <div>
    <div class="d-flex justify-content-between align-items-center mb-2">
      <h4>Usuários Comuns</h4>
      <div class="badge">
        <span id="userCount">@userCount</span> / <span id="userLimit">@disponiveis</span>
      </div>
    </div>

    <div id="usersContainer" class="mb-4">
      @if (Model.Usuarios != null)
      {
          var userIndex = 0;
          foreach (var usuario in Model.Usuarios.Where(u => u.PermissionAccount == "User"))
          {
              userIndex++;
          }
      }
    </div>

    @if (disponiveis > 1)
    {
      <button type="button" class="btn btn-outline-primary mb-4" id="btnAdicionarUser">
        <span class="material-symbols-outlined">add</span> Adicionar Usuário
      </button>
    }
  </div>

  <div class="alert alert-info">
    <strong>Limites do Plano:</strong>
    <div>Total de usuários permitidos: <strong>@limiteUsuarios</strong></div>
    <div>Usuários comuns disponíveis: <strong>@disponiveis</strong></div>
  </div>
  
      <!-- Mensagens de erro e sucesso (estilo Step 1 / Step 4) -->
    <div id="step4Error" class="text-danger mt-2 d-none"></div>
    <div id="step4Success" class="text-success mt-2 d-none"></div>
</div>
