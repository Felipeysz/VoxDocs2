@model VoxDocs.Models.ViewModels.DocumentoCreateViewModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Upload de Documentos</title>

    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet" />

    <!-- Styles -->
    <link rel="stylesheet" href="~/css/UploadStyles/UploadPageStyle.css" />
    <link rel="stylesheet" href="~/css/ChatVoxStyles/voice-modalstyle.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
</head>
<body>
  @await Html.PartialAsync("_NavbarPartial")

  <div class="upload-card mt-5" data-aos="fade-up">
    <h2><span class="material-symbols-outlined">upload</span> Upload de Documentos</h2>

    <form id="frmUpload" asp-action="Upload" asp-controller="UploadMvc" method="post" enctype="multipart/form-data">
      @Html.AntiForgeryToken()

      <!-- Arquivo -->
      <div class="mb-3">
        <label asp-for="Arquivo" class="form-label"></label>
        <input asp-for="Arquivo" type="file" class="form-control" id="arquivoInput" />
        <span asp-validation-for="Arquivo" class="text-danger"></span>
      </div>

      <!-- Pasta Principal -->
      <div class="mb-3">
        <label asp-for="SelectedPastaPrincipalId" class="form-label"></label>
        <select asp-for="SelectedPastaPrincipalId"
                asp-items="@(new SelectList(ViewBag.PastaPrincipais, "Id", "NomePastaPrincipal"))"
                class="form-control" id="PastaPrincipalSelect">
            <option value="">Escolha a Categoria Principal</option>
        </select>
        <span asp-validation-for="SelectedPastaPrincipalId" class="text-danger"></span>
      </div>

      <!-- Subpasta -->
      <div class="mb-3" id="subpasta-group" style="display:none;">
        <label asp-for="SelectedSubPastaId" class="form-label"></label>
        <select asp-for="SelectedSubPastaId" 
                asp-items="@(new SelectList(ViewBag.SubPastas, "Id", "NomeSubPasta"))"
                class="form-control" id="SubPastaSelect">
            <option value="">Escolha a Sub Categoria</option>
        </select>
        <span asp-validation-for="SelectedSubPastaId" class="text-danger"></span>
      </div>

      <!-- Nível de Segurança -->
      <div class="mb-3">
        <label asp-for="NivelSeguranca" class="form-label"></label>
        <select asp-for="NivelSeguranca" class="form-control" id="NivelSeguranca">
          <option value="Publico">Público</option>
          <option value="Restrito">Restrito</option>
          @if ((bool)ViewBag.IsAdmin)
          {
            <option value="Confidencial">Confidencial</option>
          }
        </select>
        <span asp-validation-for="NivelSeguranca" class="text-danger"></span>
      </div>

      <!-- Token (só aparece quando não é Público) -->
      <div class="mb-3" id="token-group" style="display:none;">
        <label asp-for="TokenSeguranca" class="form-label"></label>
        <input asp-for="TokenSeguranca" class="form-control" id="tokenInput" />
        <span asp-validation-for="TokenSeguranca" class="text-danger"></span>
      </div>

      <!-- Descrição -->
      <div class="mb-3">
        <label asp-for="Descricao" class="form-label"></label>
        <textarea asp-for="Descricao" class="form-control" id="descricaoInput" rows="3"></textarea>
        <span asp-validation-for="Descricao" class="text-danger"></span>
      </div>

      <!-- Botão -->
      <div class="mb-3">
        <button type="submit" class="access-btn w-100">
          <span class="material-symbols-outlined">upload</span> Upload
        </button>
      </div>
    </form>

    <!-- Mensagens de feedback -->
    @if (TempData["SuccessMessage"] != null)
    {
      <div class="alert alert-success mt-3">@TempData["SuccessMessage"]</div>
    }
  </div>

  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.js"></script>
  <script src="https://vlibras.gov.br/app/vlibras-plugin.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

  <script>
    // Inicializa AOS
    AOS.init();

    // Referências globais aos elementos
    const nivelSeguranca = document.getElementById("NivelSeguranca");
    const tokenGroup = document.getElementById("token-group");
    const tokenInput = document.getElementById("tokenInput");
    const form = document.getElementById('frmUpload');
    const pastaPrincipalSelect = document.getElementById("PastaPrincipalSelect");
    const subPastaGroup = document.getElementById("subpasta-group");
    const subPastaSelect = document.getElementById("SubPastaSelect");
    const arquivoInput = document.getElementById("arquivoInput");
    const descricaoInput = document.getElementById("descricaoInput");

    // Mostra/esconde token baseado no nível de segurança
    function toggleTokenVisibility() {
      tokenGroup.style.display = nivelSeguranca.value !== "Publico" ? "block" : "none";
      if (nivelSeguranca.value === "Publico") {
        tokenInput.value = '';
      }
    }

    // Carrega subpastas quando uma pasta principal é selecionada
    async function loadSubPastas(pastaPrincipalId) {
      if (!pastaPrincipalId) {
        subPastaGroup.style.display = "none";
        return;
      }

      try {
        const response = await fetch(`/UploadMvc/GetSubPastasByPastaPrincipal?pastaPrincipalId=${pastaPrincipalId}`);
        if (!response.ok) throw new Error("Erro ao buscar subpastas");
        
        const subPastas = await response.json();
        subPastaSelect.innerHTML = '<option value="">Escolha a Sub Categoria</option>';
        
        subPastas.forEach(subPasta => {
          const option = document.createElement('option');
          option.value = subPasta.id;
          option.textContent = subPasta.nomeSubPasta;
          subPastaSelect.appendChild(option);
        });

        subPastaGroup.style.display = "block";
      } catch (error) {
        console.error("Erro ao carregar subpastas:", error);
        subPastaGroup.style.display = "none";
      }
    }

    // Event listeners
    document.addEventListener("DOMContentLoaded", () => {
      toggleTokenVisibility();
      
      // Verifica se já tem uma pasta principal selecionada (em caso de retorno de validação)
      if (pastaPrincipalSelect.value) {
        loadSubPastas(pastaPrincipalSelect.value);
      }
    });

    nivelSeguranca.addEventListener("change", toggleTokenVisibility);
    
    pastaPrincipalSelect.addEventListener("change", function() {
      loadSubPastas(this.value);
    });

    // Validação do formulário
    $(document).ready(function() {
      $.validator.setDefaults({
        highlight: function(element) {
          $(element).addClass('is-invalid');
        },
        unhighlight: function(element) {
          $(element).removeClass('is-invalid');
        },
        errorElement: 'div',
        errorClass: 'invalid-feedback',
        errorPlacement: function(error, element) {
          if (element.prop('type') === 'file') {
            error.insertAfter(element.parent());
          } else {
            error.insertAfter(element);
          }
        }
      });

      // Validação customizada para o token quando necessário
      $.validator.addMethod("requiredIfNotPublic", function(value, element) {
        return nivelSeguranca.value === "Publico" || value.trim() !== "";
      }, "Token de segurança é obrigatório para este nível");

      $("#frmUpload").validate({
        rules: {
          TokenSeguranca: {
            requiredIfNotPublic: true
          }
        }
      });
    });
  </script>
</body>
</html>