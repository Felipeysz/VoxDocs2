@inject IHttpContextAccessor HttpContextAccessor
@model IEnumerable<VoxDocs.DTO.LogAtividadeDto>
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Logs & Atividades • VoxDocs</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/styleSidebarDashboard.css" />
    <style>
        :root {
            --color-primary: #774C9E;
            --bg-light: #f4f6f9;
            --shadow: rgba(0,0,0,0.1);
            --sidebar-width: 240px;
        }

        body {
            margin: 0;
            font-family: 'Poppins', sans-serif;
            background: var(--bg-light);
            display: flex;
        }

        #sidebar-container {
            position: fixed;
            top: 0;
            left: 0;
            bottom: 0;
        }

        #main {
            margin-left: var(--sidebar-width);
            flex: 1;
            padding: 2rem;
        }

        .content-wrapper {
            max-width: 1000px;
            margin: 0 auto;
        }

        h2 {
            color: var(--color-primary);
            margin-bottom: 1.5rem;
        }

        .filter-bar {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            margin-bottom: 1rem;
            align-items: flex-end;
        }

        .filter-bar label {
            font-size: .9rem;
            margin-bottom: .25rem;
            display: block;
        }

        .table-responsive {
            box-shadow: 0 4px 12px var(--shadow);
            border-radius: .5rem;
            background: #fff;
        }

        .details-btn {
            padding: .25rem .5rem;
        }
    </style>
</head>
<body>

    <div id="sidebar-container">
        @Html.Partial("_SidebarAdmin")
    </div>
    <div id="main">
        <div class="content-wrapper">
            <h2>Logs & Atividades</h2>
            <div class="filter-bar">
                <div>
                    <label>Data Início</label>
                    <input type="date" id="filterStart" class="form-control" />
                </div>
                <div>
                    <label>Data Fim</label>
                    <input type="date" id="filterEnd" class="form-control" />
                </div>
                <div style="flex:1">
                    <label>Pesquisar</label>
                    <input type="text" id="filterText" class="form-control" placeholder="usuário, ação ou documento" />
                </div>
                <button id="btnFilter" class="btn btn-primary">Buscar</button>
            </div>

            <div class="table-responsive">
                <table class="table mb-0 align-middle">
                    <thead class="table-light">
                        <tr>
                            <th>Data / Hora</th>
                            <th>Usuário</th>
                            <th>Ação</th>
                            <th>Detalhes</th>
                        </tr>
                    </thead>
                    <tbody id="logTableBody">
                        @foreach (var log in Model)
                        {
                            <tr>
                                <td>@log.DataHora.ToString("dd/MM/yyyy HH:mm")</td>
                                <td>@log.Usuario</td>
                                <td>@log.Acao</td>
                                <td>
                                    <button class="btn btn-outline-secondary details-btn" data-details="@log.Detalhes">
                                        <span class="material-symbols-outlined">visibility</span>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Details Modal -->
    <div class="modal fade" id="modalDetails" tabindex="-1">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title">Detalhes da Atividade</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p><strong>Detalhes:</strong></p>
                    <pre id="detDetails"></pre>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/scriptSideBar.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Configurar eventos dos botões de detalhes
            document.querySelectorAll('.details-btn').forEach(btn => {
                btn.addEventListener('click', e => {
                    const details = e.currentTarget.dataset.details;
                    document.getElementById('detDetails').textContent = details;
                    new bootstrap.Modal(document.getElementById('modalDetails')).show();
                });
            });

            // Configurar filtro
            document.getElementById('btnFilter').addEventListener('click', () => {
                const start = document.getElementById('filterStart').value;
                const end = document.getElementById('filterEnd').value;
                const txt = document.getElementById('filterText').value.toLowerCase();
                
                const rows = document.querySelectorAll('#logTableBody tr');
                
                rows.forEach(row => {
                    const dateStr = row.cells[0].textContent.split(' ')[0];
                    const dateParts = dateStr.split('/');
                    const isoDate = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;
                    
                    const user = row.cells[1].textContent.toLowerCase();
                    const action = row.cells[2].textContent.toLowerCase();
                    const target = row.cells[3].textContent.toLowerCase();
                    const details = row.querySelector('.details-btn').dataset.details.toLowerCase();
                    
                    let show = true;
                    
                    if (start && isoDate < start) show = false;
                    if (end && isoDate > end) show = false;
                    if (txt && !(user.includes(txt) || action.includes(txt) || target.includes(txt) || details.includes(txt))) {
                        show = false;
                    }
                    
                    row.style.display = show ? '' : 'none';
                });
            });
        });
    </script>
</body>
</html>