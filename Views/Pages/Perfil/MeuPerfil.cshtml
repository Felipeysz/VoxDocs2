@model VoxDocs.ViewModels.PerfilViewModel
@{
    ViewData["Title"] = "Meu Perfil â€¢ VoxDocs";
    Layout = null;
}

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <title>@ViewData["Title"]</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet"/>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"/>
    <link href="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.css" rel="stylesheet"/>
    <style>
        :root {
            --primary: #7c3aed;
            --primary-light: #8b5cf6;
            --primary-dark: #6d28d9;
            --secondary: #10b981;
            --dark: #1e293b;
            --light: #f8fafc;
            --gray: #94a3b8;
            --gray-light: #e2e8f0;
            --danger: #ef4444;
            --warning: #f59e0b;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f8fafc;
            background-image: linear-gradient(to bottom, #f8fafc 0%, #e2e8f0 100%);
            color: var(--dark);
            line-height: 1.6;
            min-height: 100vh;
        }
        
        /* Main Content */
        .main-content {
            padding: 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }
        
        /* Header */
        .profile-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2.5rem;
        }
        
        .profile-title {
            font-size: 2rem;
            font-weight: 700;
            color: var(--dark);
        }
        
        .profile-actions {
            display: flex;
            gap: 1rem;
        }
        
        .btn {
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            cursor: pointer;
            transition: all 0.2s ease;
            border: none;
        }
        
        .btn-primary {
            background-color: var(--primary);
            color: white;
        }
        
        .btn-primary:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(124, 58, 237, 0.3);
        }
        
        /* Profile Card */
        .profile-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
            overflow: hidden;
            margin-bottom: 2rem;
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        
        .profile-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        
        .profile-card-header {
            padding: 1.25rem 1.5rem;
            border-bottom: 1px solid var(--gray-light);
            display: flex;
            align-items: center;
            gap: 0.75rem;
            background: linear-gradient(to right, var(--primary), var(--primary-light));
            color: white;
        }
        
        .profile-card-header h3 {
            font-size: 1.25rem;
            font-weight: 600;
        }
        
        .profile-card-body {
            padding: 1.5rem;
        }
        
        /* Profile Grid */
        .profile-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
        }
        
        .profile-info-item {
            margin-bottom: 1.25rem;
        }
        
        .profile-info-label {
            font-size: 0.875rem;
            color: var(--gray);
            margin-bottom: 0.25rem;
            font-weight: 500;
        }
        
        .profile-info-value {
            font-size: 1rem;
            font-weight: 500;
            color: var(--dark);
            padding: 0.75rem;
            background-color: rgba(241, 245, 249, 0.7);
            border-radius: 8px;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            border-left: 3px solid var(--primary);
            transition: all 0.3s ease;
        }
        
        .profile-info-value:hover {
            background-color: rgba(226, 232, 240, 0.9);
            transform: translateX(5px);
        }
        
        .profile-info-value span {
            color: var(--primary);
        }
        
        /* Status Badge */
        .status-badge {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            border-radius: 50px;
            font-size: 0.875rem;
            font-weight: 600;
        }
        
        .status-active {
            background-color: rgba(16, 185, 129, 0.1);
            color: var(--secondary);
        }
        
        .status-inactive {
            background-color: rgba(239, 68, 68, 0.1);
            color: var(--danger);
        }
        
        /* Activity Timeline */
        .timeline {
            position: relative;
            padding-left: 1.5rem;
        }
        
        .timeline::before {
            content: '';
            position: absolute;
            left: 7px;
            top: 0;
            bottom: 0;
            width: 2px;
            background-color: var(--gray-light);
        }
        
        .timeline-item {
            position: relative;
            padding-bottom: 1.5rem;
        }
        
        .timeline-dot {
            position: absolute;
            left: -1.5rem;
            top: 0;
            width: 16px;
            height: 16px;
            border-radius: 50%;
            background-color: var(--primary);
            border: 3px solid white;
        }
        
        .timeline-content {
            background-color: rgba(255, 255, 255, 0.9);
            border-radius: 8px;
            padding: 1rem;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
        }
        
        .timeline-content:hover {
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        }
        
        .timeline-date {
            font-size: 0.75rem;
            color: var(--gray);
            margin-bottom: 0.25rem;
        }
        
        .timeline-text {
            font-size: 0.875rem;
            color: var(--dark);
        }
        
        /* Empty State */
        .empty-state {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 2rem;
            text-align: center;
            color: var(--gray);
        }
        
        .empty-state span {
            font-size: 3rem;
            margin-bottom: 1rem;
            color: var(--gray-light);
        }
        
        
        /* Responsividade */
        @@media (max-width: 768px) {
            .main-content {
                padding: 1.5rem;
            }
            
            .profile-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }
            
            .profile-actions {
                width: 100%;
            }
            
            .btn {
                width: 100%;
                justify-content: center;
            }
        }
        
        /* Toast Notifications */
        .toast-container {
            position: fixed;
            top: 1rem;
            right: 1rem;
            z-index: 1055;
            max-width: 350px;
        }
        
        .toast {
            border: none;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }
        
        .toast-header {
            font-weight: 600;
        }
        
        /* Animations */
        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .animate-in {
            animation: fadeIn 0.3s ease forwards;
        }
    </style>
</head>
<body>
    <!-- Toast Notifications -->
    <div class="toast-container">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="toast show animate-in" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header" style="background-color: var(--secondary); color: white;">
                    <strong class="me-auto">Sucesso</strong>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body">
                    @TempData["SuccessMessage"]
                </div>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="toast show animate-in" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header" style="background-color: var(--danger); color: white;">
                    <strong class="me-auto">Erro</strong>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body">
                    @TempData["ErrorMessage"]
                </div>
            </div>
        }
    </div>

    <!-- VLibras -->
    <div vw class="enabled">
        <div vw-access-button class="active"></div>
        <div vw-plugin-wrapper>
            <div class="vw-plugin-top-wrapper"></div>
        </div>
    </div>
    <script src="https://vlibras.gov.br/app/vlibras-plugin.js"></script>
    <script> new window.VLibras.Widget('https://vlibras.gov.br/app'); </script>

    <!-- Main Content -->
    <main class="main-content">
        <header class="profile-header">
            <h1 class="profile-title">Meu Perfil</h1>
            <div class="profile-actions">
                <a asp-controller="Home" asp-action="Index" class="btn btn-primary">
                    <span class="material-symbols-outlined">home</span>
                    Voltar Ã  Home
                </a>
            </div>
        </header>

        <!-- Profile Overview -->
        <div class="profile-card">
            <div class="profile-card-header">
                <span class="material-symbols-outlined">badge</span>
                <h3>InformaÃ§Ãµes Pessoais</h3>
            </div>
            <div class="profile-card-body">
                <div class="profile-grid">
                    <div class="profile-info-item">
                        <div class="profile-info-label">UsuÃ¡rio</div>
                        <div class="profile-info-value">
                            <span class="material-symbols-outlined">person</span>
                            @Model.Usuario
                        </div>
                    </div>
                    
                    <div class="profile-info-item">
                        <div class="profile-info-label">E-mail</div>
                        <div class="profile-info-value">
                            <span class="material-symbols-outlined">mail</span>
                            @Model.Email
                        </div>
                    </div>
                    
                    <div class="profile-info-item">
                        <div class="profile-info-label">Empresa</div>
                        <div class="profile-info-value">
                            <span class="material-symbols-outlined">business</span>
                            @Model.EmpresaContratante
                        </div>
                    </div>
                    
                    <div class="profile-info-item">
                        <div class="profile-info-label">Plano</div>
                        <div class="profile-info-value">
                            <span class="material-symbols-outlined">workspace_premium</span>
                            @Model.Plano
                        </div>
                    </div>
                    
                    <div class="profile-info-item">
                        <div class="profile-info-label">Tipo de Conta</div>
                        <div class="profile-info-value">
                            <span class="material-symbols-outlined">security</span>
                            @Model.PermissaoConta
                        </div>
                    </div>
                    
                    <div class="profile-info-item">
                        <div class="profile-info-label">Data de CriaÃ§Ã£o</div>
                        <div class="profile-info-value">
                            <span class="material-symbols-outlined">calendar_today</span>
                            @Model.DataCriacao.ToString("dd/MM/yyyy")
                        </div>
                    </div>
                    
                    <div class="profile-info-item">
                        <div class="profile-info-label">Ãšltimo Login</div>
                        <div class="profile-info-value">
                            <span class="material-symbols-outlined">login</span>
                            @(Model.UltimoLogin?.ToString("dd/MM/yyyy HH:mm") ?? "Nunca")
                        </div>
                    </div>
                    
                    <div class="profile-info-item">
                        <div class="profile-info-label">Status</div>
                        <div class="profile-info-value">
                            <span class="material-symbols-outlined">circle</span>
                            <span class="status-badge @(Model.Ativo ? "status-active" : "status-inactive")">
                                @(Model.Ativo ? "Ativo" : "Inativo")
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Activity -->
        <div class="profile-card">
            <div class="profile-card-header">
                <span class="material-symbols-outlined">history</span>
                <h3>Atividade Recente</h3>
            </div>
            <div class="profile-card-body">
                <div class="timeline">
                    <div class="timeline-item">
                        <div class="timeline-dot"></div>
                        <div class="timeline-content">
                            <div class="timeline-date">Hoje, 10:30</div>
                            <div class="timeline-text">VocÃª acessou o documento "RelatÃ³rio Anual 2023"</div>
                        </div>
                    </div>
                    
                    <div class="timeline-item">
                        <div class="timeline-dot"></div>
                        <div class="timeline-content">
                            <div class="timeline-date">Ontem, 15:45</div>
                            <div class="timeline-text">Compartilhou "Contrato de ServiÃ§os" com Maria Silva</div>
                        </div>
                    </div>
                    
                    <div class="timeline-item">
                        <div class="timeline-dot"></div>
                        <div class="timeline-content">
                            <div class="timeline-date">2 dias atrÃ¡s</div>
                            <div class="timeline-text">Atualizou as informaÃ§Ãµes do perfil</div>
                        </div>
                    </div>
                </div>
                
                <div class="empty-state">
                    <span class="material-symbols-outlined">history</span>
                    <p>Seu histÃ³rico completo de atividade aparecerÃ¡ aqui</p>
                </div>
            </div>
        </div>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.js"></script>
    <script>
        // Initialize animations
        AOS.init({
            once: true,
            duration: 600
        });
        
        // Auto-close toasts after 5 seconds
        document.addEventListener('DOMContentLoaded', function() {
            // Toast notifications
            var toastElList = [].slice.call(document.querySelectorAll('.toast'));
            toastElList.forEach(function(toastEl) {
                setTimeout(function() {
                    var toast = new bootstrap.Toast(toastEl);
                    toast.show();
                    
                    setTimeout(function() {
                        toast.hide();
                    }, 5000);
                }, 100);
            });
            
            // Modal initialization
            var assistantModal = document.getElementById('assistantModal');
            if (assistantModal) {
                // ConfiguraÃ§Ã£o do modal
                var modalInstance = new bootstrap.Modal(assistantModal, {
                    backdrop: 'static',
                    keyboard: false
                });
                
                // BotÃ£o de toggle
                document.getElementById('toggleAssistant')?.addEventListener('click', function() {
                    modalInstance.show();
                });
                
                // Fechar quando clicar no botÃ£o de fechar
                assistantModal.querySelectorAll('[data-bs-dismiss="modal"]').forEach(function(closeBtn) {
                    closeBtn.addEventListener('click', function() {
                        modalInstance.hide();
                    });
                });
            }
        });
    </script>
</body>
</html>