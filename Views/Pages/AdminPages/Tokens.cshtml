@{
    ViewData["Title"] = "Gerador de Tokens - VoxDocs";
    Layout = null; // Não usar layout padrão
}

<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>@ViewData["Title"] - VoxDocs</title>

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />

  <!-- Poppins font + Material Icons -->
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;900&display=swap" rel="stylesheet" />
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />

  <style>
      body {
          font-family: 'Poppins', sans-serif;
          background-color: #f4f4f4;
          margin: 0;
          overflow-x: hidden;
      }

      /* CONTAINER */
      .wrapper {
          display: flex;
          min-height: 100vh;
          transition: margin-left 0.3s ease-in-out;
      }
      .wrapper.sidebar-open {
          margin-left: 250px;
      }

      /* SIDEBAR */
      #sidebar {
          width: 250px;
          background-color: #6257db;
          padding: 2rem 1rem;
          position: fixed;
          top: 0; left: 0; bottom: 0;
          transform: translateX(-250px);
          transition: transform 0.3s ease-in-out;
      }
      .wrapper.sidebar-open #sidebar {
          transform: translateX(0);
      }
      #sidebar h2 {
          color: white;
          font-weight: 900;
      }
      .sidebar-link {
          display: block;
          color: white;
          margin: 1rem 0;
          font-weight: 600;
          text-decoration: none;
          padding: 0.5rem 1rem;
          border-radius: 8px;
          transition: background-color 0.3s ease;
      }
      .sidebar-link:hover {
          background-color: #5346c9;
      }

      /* MAIN CONTENT */
      .content {
          flex: 1;
          padding: 2rem;
          background-color: #fff;
          border-radius: 16px;
          margin: 2rem;
          box-shadow: 0 0 15px rgba(0,0,0,0.1);
      }

      /* TOGGLE BUTTON */
      #toggleSidebarBtn {
          position: fixed;
          top: 1rem; left: 1rem;
          background: #6257db;
          color: white;
          border: none;
          border-radius: 50%;
          width: 50px; height: 50px;
          font-size: 1.5rem;
          z-index: 1000;
          box-shadow: 0 0 10px rgba(0,0,0,0.15);
          transition: transform 0.3s ease;
      }
      #toggleSidebarBtn:hover {
          background: #5346c9;
          transform: rotate(90deg);
      }

      /* CARDS */
      .card {
          border: none;
          border-radius: 16px;
          box-shadow: 0 0 15px rgba(0,0,0,0.05);
          transition: transform 0.3s ease, box-shadow 0.3s ease;
          opacity: 0.95;
      }
      .card:hover {
          transform: translateY(-8px);
          box-shadow: 0 8px 20px rgba(0,0,0,0.1);
          opacity: 1;
      }
  </style>
</head>
<body>

  <!-- Toggle sidebar button -->
  <button id="toggleSidebarBtn" class="btn">
      <span class="material-icons">menu</span>
  </button>

  <div class="wrapper">
      <!-- Sidebar -->
        <nav id="sidebar">
        <h2 class="text-center mb-4">Painel Admin</h2>
        <a asp-controller="DashboardMvc" asp-action="Dashboard" class="sidebar-link">Dashboard</a>
        <a asp-controller="UsersAdminMvc" asp-action="UsersAdmin" class="sidebar-link">Admin Usuários</a>
        <a asp-controller="TokensMvc" asp-action="Tokens" class="sidebar-link">Tokens</a>
        <a asp-controller="UploadMvc" asp-action="Upload" class="sidebar-link">Upload de Arquivos</a>
        </nav>

      <!-- Main content -->
      <main class="content">
          <div class="container">
              <div class="card shadow-sm">
                  <div class="card-body">
                      <h2 class="card-title mb-3">Gerador de Tokens</h2>
                      <p class="mb-4">Crie tokens temporários com limite de uso.</p>
                      <button class="btn btn-success mb-4" onclick="generateToken()">Gerar Novo Token</button>
                      <div id="tokensList">
                          <h4 class="mb-3">Tokens Ativos</h4>
                          <ul id="tokenContainer" class="list-unstyled">
                              <!-- Lista de tokens será preenchida via JS -->
                          </ul>
                      </div>
                  </div>
              </div>
          </div>
      </main>
  </div>

  <!-- Bootstrap JS bundle -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

  <script>
      // Função para alternar sidebar
      const toggleBtn = document.getElementById('toggleSidebarBtn');
      const wrapper = document.querySelector('.wrapper');

      toggleBtn.addEventListener('click', () => {
          wrapper.classList.toggle('sidebar-open');
      });

      // Função de exemplo para gerar tokens (mock)
      function generateToken() {
          const tokenContainer = document.getElementById('tokenContainer');
          const token = Math.random().toString(36).substring(2, 10).toUpperCase();
          const li = document.createElement('li');
          li.className = 'token-item';
          li.innerHTML = `<span>${token}</span> <span class="token-expire">Expira em 1h</span>`;
          tokenContainer.appendChild(li);
      }
  </script>
</body>
</html>
